[복습]

표 콘텐츠
1.  Table, Tr, Th, Td tag
- 데이터 표(table)의 행(줄/tr)과 열(칸, 셀/th, td)을 생성
- > th는 테이블의 헤더로 보통 표 안의 값을 넣기 위해서는 td를 사용한다.
- <table>: 표의 영역 설정
- <tr>: 줄을 의미 -> 줄을 먼저 만들어야 한다

2. Th tag
- 머리글 칸을 지정(표의 헤더부분)

2.1 속성
 1) abbr 속성: 열에 대한 간단한 설명
 2) headers 속성: 관련된 하나 이상의 다른 th칸 id 속성
    -> 다른 th와 연결된 내용이라면 th 부분에 id값이 존재할 수 있다. 
 3) colspan 속성: 병합하려는 열의 수, 자신을 기준으로 몇 칸까지 병합할 것인지 값을 넣어야 한다. 기본값은 “1” 
 4) rowspan 속성: 병합하려는 행의 수
 5) scope 속성:　자신이 누구의 머리글 칸인지 명시(어떤 행 or 열에 종속되어 있는지)

<실습>
- abbr, scope 속성은 크게 중요한 속성은 아니므로 굳이 사용하지 않아도 됨
- id 값은 고유한 이름이기 때문에 일반적인 명사를 사용하지 않도록 해야함
- 데이터 부분의 id를 타입과 값 부분에 headers로 넣어줌으로서 데이터의 종속되어있다는 것을 알 수 있다.
  
3. Td tag
- 일반 칸을 지정
- 속성: headers(th의 id 값과 연결), colspan, rowspan

<표를 보조하는 역할을 하는 태그들>
4. Caption tag
- 표의 제목을 설정
- 열리는 table 태그 바로 다음에 작성해야함
- table 당 하나의 caption만 사용 가능

-------------------------------
표 콘텐츠
1.  Colgroup, col tag
- 표의 열들을 공통적으로 정의하는 컬럼(col)과 그 집합(colgroup)
- span 속성: 연속되는 열의 수, 값은 숫자
=> col 태그에 적은 style을 연속적으로 몇 개의 col에 적용할 것인지
- 기본적으로 이 태그는 caption 위에 사용x, 표의 첫 번째 줄 위에 사용하기
- colgroup은 col을 하나로 묶어줄 때 사용

2. Thread, Tbody, Tfoot tag
- 표의 머리글(thead), 본문(tbody), 바닥글(tfoot)을 지정
- 테이블의 레이아웃에는 영향을 주지 않음-> 의미적인 부분에서만 나누는 역할

양식
1.  Form tag
- 웹 서버에 정보를 제출하기 위한 양식 범위를 정의
- > 여러 입력 양식들을 form 태그로 래핑할 수 있고 그 범위 안에 입력된 양식의 정보들을 특정 페이지나 주소로 전송하기 위해서 사용
- block 요소
- form이 다른 form을 자식으로 포함할 수 없음
1.1 속성
 1)　action 속성: 전송할 정보를 처리할 웹페이지의 url
 2) autocomplete 속성: 사용자가 이전에 입력한 값으로 자동완성 기능을 사용할 것인지 여부
   - 기본값은 on, 종류는 on, off가 있다.
 3) method 속성: 서버로 전송할 http 방식
   - 기본값은 GET, 종류는 get, post가 있다.
 4) name 속성: 고유한 양식의 이름 -> 다른 form과 차별화 하기 위한 것
 5) novalidate 속성: 서버로 전송 시 양식 데이터의 유효성을 검사하지 않도록  지정
 6) target 속성:서버로 전송 후 응답받을 방식을 지정, 기본값은 _self, 종류는 _self, _blank
   -> 우리가 정보를 제출하면 action에 있는 url이 열리게 되는데 이 사이트를 현재 탭에서 열 것인지, 새로운 탭에서 열 것인지 설정

<실습>
- input 태그의 type은 사용자로부터 어떤 것을 입력받을지 결정
- button 태그의 type에서 submit은 어떤 버튼을 누르면 이와 관련된 내용이 어딘가로 전송된다는 의미

** GET 방식: 입력한 정보가 주소 부분에 노출됨
   POST 방식: 입력한 정보가 주소 부분에 노출이 안되지만 but 전송 과정에서 볼 수 있기는 하다.
-> 어딘가로 정보를 보낼 때 post방식을 많이 사용하기는 하지만 결과적으로 완벽하게 숨길 수는 없다 -> 따라서 민감한 정보는 암호화 해서 전송
- 대부분 유효성 검사를 진행하기 때문에 novalidate 속성은 테스트 할 때 같은 특수한 경우에만 사용된다.
-------------------------------------------
양식
1.  Input tag
- 사용자에게 입력받을 데이터 양식
- 빈태그

1.1 속성
 1) autocomplete 속성: 자동완성 기능을 사용할 것인지 여부 -> form 태그에서 사용 시 form 태그 안의 모든 입력에서 자동완성 기능의 사용 여부를 판단하는 것이고, input 태그에서 사용 시 해당 입력에서만 사용 여부를 설정하는 것
 2) autofocus 속성: 페이지가 로드될 때 자동으로 포커스, 문서 내에 고유해야 한다.
 3) checked 속성: (type의 속성값이 radio, checkbox인 경우)양식이 선택되었음을 표시
 4) form 속성: form의 id 속성 값, 보통 form 태그 안에 사용되지만 form 태그 밖에 사용되는 경우 form의 id 속성값과 연결을 해주면 form 태그 밖에 있지만 연결해서 사용 가능
 5) name 속성: 양식의 이름, 서버를 통해 정보를 전송 할 때 name을 통해 어떤 정보가 넘어오는지 표시를 해주는 것
 6) type 속성: 입력받을 데이터의 종류
  - button: 일반 버튼, 기능이 없기 때문에 자바 스크립트를 통해 기능을 구현해야 한다.
  - checkbox(체크 박스), email, file, password, submit(서버로 정보를 전송하겠다는 것), text


CSS 속성 

1. margin 중복
- 특정 margin 값들이 중복되어 합쳐지는 현상
- 마진 중복은 버그가 아니다. 현상을 우회하거나 응용할 수 있다.

- 중복이 생기는 경우
1) 형제 요소들의 margin-top과 margin-bottom이 만났을 때
- 기본적으로 한 줄에 정렬이 되어있어서 margin의 좌, 우가 겹치는 경우는 margin(여백)이 더해진다.
- 하지만 수직으로 쌓여서 위, 아래 margin이 쌓이면 중복되어 하나만 표현이 된다.

2) 부모 요소의 margin-top과 자식 요소의 margin-top이 만났을 때
3) 부모 요소의 margin-bottom과 자식 요소의 margin-bottom이 만났을 때
- 부모 요소의 margin-top(buttom)이 시작하는 면과 자식 요소의 margin-top(buttom)이 시작되는 부분이 같다면 자식 요소에 추가한 margin-top(buttom) 속성이 부모요소에 추가하는 것과 동일한 화면을 출력하게 된다.


조건                요소 A 마진                 요소 B 마진             계산법             중복 값          
둘 다 양수             30px                       10px            더 큰값으로 중복          30px
둘 다 음수            -30px                      -10px           더 작은 값으로 중복       -30px
각각 양수와 음수       -30px                       10px              -30+10=-20            -20px


2. padding
- 요소의 내부 여백을 지정
- 단축 속성-> 위, 아래, 좌, 우 모두 따로 지정 가능
- 속성 값: [px, em, cm] 등 단위로 지정, %(부모 요소의 너비에 대한 비율로 지정)
- 기본 값: 0
- 기본적인 사용법은 margin 속성과 같다.
ex) padding: 10px; -> 위, 아래, 좌, 우 모두 10px
    padding: 10px 20px 30px 40px; -> 위, 우, 아래, 좌 여백을 각각 지정
    padding: 10px 30px 40px; -> 위, [좌, 우], 아래 여백을 지정
    padding: 10px 40px; -> [위, 아래], [좌, 우] 여백을 지정
- padding-top, padding-bottom, padding-left, padding-right 따로 지정 가능

2.1 특징
- 추가된 padding 값 만큼 크기가 커지는 현상
-> 따라서 padding 속성을 사용하고자 한다면 padding 크기까지 고려해서 크기를 설정해야 한다. (직접 계산하는 방법)
- 자동 계산: box-sizing: border-box; 를 추가한다. -> 자동으로 계산을 해서 원하는 크기를 맞춰준다!

3. box-sizing
- 요소의 크기 계산 기준을 지정
- 속성 값: content-box(너비(width, height)만으로 요소의 크기 계산, 기본값), border-box(너비에 안쪽 여백(padding)과 테두리 선(border)을 포함하여 요소의 크기를 계산)
- content-box: 요소가 가지고 있는 content 영역 
- padding box: content bot + padding 영역
- border box: padding box + border 영역
