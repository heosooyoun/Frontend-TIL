[오늘의 공부]
1. 패스트 캠퍼스 인강을 다시 듣고 복습 + 실습

양식
1.  Input tag
- 사용자에게 입력받을 데이터 양식
- 빈태그

1.1 속성
 1) autocomplete 속성: 자동완성 기능을 사용할 것인지 여부 -> form 태그에서 사용 시 form 태그 안의 모든 입력에서 자동완성 기능의 사용 여부를 판단하는 것이고, input 태그에서 사용 시 해당 입력에서만 사용 여부를 설정하는 것
 2) autofocus 속성: 페이지가 로드될 때 자동으로 포커스, 문서 내에 고유해야 한다.
 3) checked 속성: (type의 속성값이 radio, checkbox인 경우)양식이 선택되었음을 표시
 4) form 속성: form의 id 속성 값, 보통 form 태그 안에 사용되지만 form 태그 밖에 사용되는 경우 form의 id 속성값과 연결을 해주면 form 태그 밖에 있지만 연결해서 사용 가능
 5) name 속성: 양식의 이름, 서버를 통해 정보를 전송 할 때 name을 통해 어떤 정보가 넘어오는지 표시를 해주는 것
 6) type 속성: 입력받을 데이터의 종류
  - button: 일반 버튼, 기능이 없기 때문에 자바 스크립트를 통해 기능을 구현해야 한다.
  - checkbox(체크 박스), email, file, password, submit(서버로 정보를 전송하겠다는 것), text

<실습 1- Login>
- form 태그 밖에 input 태그를 사용하게 되면 form 태그의 내용을 전송 할 때 같이 전송이 되지않는데, input 태그 안에 form 속성을 이용하면 form 태그 안에 input 태그가 있는 것처럼 사용할 수 있다.
- maxlength 속성: 사용자가 입력할 수 있는 최대 글자 수 제한
- 전송할 때 데이터의 이름을 설정해야 Get 방식에서 주소창에 값이 표시된다.

<실습 2- type number>
- input 타입이 number인 경우 입력 창 옆에 화살표가 생기고 이것을 이용해 증가/감소 시킬 수 있다.
- readonly 속성: 사용자는 읽는 것만 가능하고 고칠 수 없다.
- disabled 속성: 아예 focusing 되지도 않음 -> 비활성화 시키는 것
- placeholder 속성: 사용자에게 힌트를 주는 것 -> 입력하기 전에 입력 창에 띄우는 메시지
- max, min 속성: input 타입이 number인 경우 최댓값과 최솟값
- step 속성: 숫자를 증가/감소시킬 때 간격

<실습 3- input file>
- 기본적으로 하나의 파일만 받을 수 있다 -> 여러개를 받으려면 multiple 속성 이용

<실습 4- input image>
- image 태그처럼 이미지를 삽입할 수 있다
- 삽입한 이미지를 제출하는 버튼처럼도 사용 가능!

<실습 5- input radio>
- 기본적으로 해제되지 않음 -> 여러 개의 선택지 중 선택할 때 사용
- checked 속성을 이용해 처음에 기본으로 선택되어 있는 선택지가 있도록 설정 가능

<실습 6>
- 초기화 버튼은 form 안에 존재하기 때문에 form 안의 input들만 초기화 한다.

2. Label tag
- 라벨 가능 요소의 제목
- 라벨 가능 요소: input, button, progress, select, textarea
- for 속성을 이용하면 라벨 가능 요소와 연결할 수 있다.
-> 해당 요소의 제목이라는 것을 알 수 있다.=> 따라서 글자를 클릭해도 체크박스가 선택이 된다.
- for 속성을 사용하지 않고 label 태그 안에 input을 넣어도 동일한 기능을 한다.-> 더 추천하는 방식

3. Button tag
- 선택 가능한 버튼을 지정
- 속성: autofocus(자동으로 포커스), disabled(버튼 비활성화), form, name, type(일반 버튼, 초기화 버튼, 제출 버튼)
- 일반 버튼은 기본적으로 아무 기능이 없기 때문에 대부분 자바스크립트를 이용해 기능을 정의한다.

4. Textarea tag
- 여러 줄의 일반 텍스트 양식
- 속성: 여러 가지가 존재하지만 그동안 배운 것과 많이 겹친다. row 속성(양식의 줄 수, 기본값 2-> 화면에 표시되는 줄 수, 입력은 여러줄 가능)

5. Fieldset, legend tag
- 같은 목적의 양식을 그룹화(fieldset) 하여 제목(legend)을 지정
- fieldset 속성: disabled(그룹 내 양식 요소 비활성화), form, name 
- ---------------------------------------------

양식
1.  select, datalist, optgroup, option tag
- 옵션(optgroup, option)의 선택 메뉴(select)나 자동완성(datalist)을 제공

1.1 Select tag
- 옵션을 선택하는 메뉴를 제공

1) 속성
- autocomplete 속성:　자동완성 기능 사용 여부
- disabled 속성: 선택 메뉴 비활성화
- form, name 속성
- multiple 속성: 다중 선택 여부
- size 속성: 한 번에 볼 수 있는 행의 개수 

<select >
        <optgroup  label ="Coffee">
            <option >Americano </option >
            <option >Caffe Moca </option >
            <option  label ="Cappuccino" value ="Cappuccino"></option >
        </optgroup >
        <optgroup  label ="Latte">
            <option >Vanilla Latte </option >
            <option >Caffe Latte </option >
        </optgroup >
        <optgroup  label ="Smoothie">
            <option >Plain </option >
            <option >Strawberry </option >
            <option >Banana </option >
            <option >Mango </option >
            </optgroup >
    </select >



1.2 Optgroup tag
- option을 그룹화

1) 속성
- label 속성: 옵션의 그룹 이름(필수)
- disabled 속성

1.3 Option tag
- 선택 메뉴나 자동완성에서 사용될 옵션
- 선택적 빈 태그로 사용 가능

1) 속성 
- disabled 속성(비활성화), value 속성(양식으로 제출 될 값)
- label 속성: 표시될 옵션의 제목
- selected 속성: 옵션이 선택되었음을 표시
-> label, value 속성이 생략 되면 태그 안의 텍스트가 그 역할을 한다.
=> 빈 태그로 사용할 때 lable, value가 필요하다.

1.4 datalist tag
- input 태그에 미리 정의된 옵션을 지정하여 자동완성 기능을 제공

<실습>
- input으로 기본적인 양식을 제공하고 추가적으로 제공될 자동완성을 datalist를 이용할 수 있다.


<input  type ="text" list ="fruits">
    <datalist  id ="fruits">
        <option >Apple </option >
        <option >Orange </option >
        <option >Banana </option >
        <option >Mango </option >
        <option >Fineapple </option >
    </datalist >



2. Progress tag
- 작업의 완료 진행률을 표시  ex) 로딩바

1.1 속성
 1) max 속성: 작업의 총량
 2) value 속성: 작업의 진행량 -> 가변적인 값이기 때문에 자바스크립트를 많이 이용
  - max값이 정의가 안되어 있는 경우 0~1 사이의 값이여야 한다.

<실습>
- script 태그의 첫 번째 줄: 위에서 정의한 progress 태그를 찾아 놓은 상태
- 2~5줄: 1초에 1번씩 progress의 값을 10씩 더하고, progress의 값이 100이 되면 정지
