HTML- 블록 요소와 인라인 요소
1. 블록 요소
1. div, h1, p
2. 특징
- 사용 가능한 최대 가로 너비 사용
- 크기를 지정할 수 있다.
- width: 100%; height: 0;으로 시작 -> width와 height를 지정하지 않은 경우 기본값인 auto로 시작이 된다.
- 수직으로 쌓임 => 같은 요소를 여러 개 생성했을 때 줄바꿈이 된 형태로 출력된다.
- margin, padding에서 위, 아래, 좌, 우 여백 모두 사용 가능하다.
- 블록요소는 레이아웃을 잡을 때 사용​


2. 인라인 요소
1. span, img
2. 특징
- 필요한 만큼의 너비만 사용(자신에게 포함된 내용 만큼만 사용)
- 크기를 지정할 수 없다.
- width: 0; height: 0;으로 시작-> width와 height를 지정하지 않은 경우 기본값인 auto로 시작이 된다.(but 블록 요소와 다르게 구현된다)
- 수평으로 쌓임 => 줄바꿈을 하면 띄어쓰기가 자동으로 생성된다.
- margin, padding에서 위, 아래 여백은 사용이 불가능하다.
- text를 작업할 때 사용

3. 블록 요소와 인라인 요소를 서로 바꾸는 경우
- display 속성을 이용하여 인라인 요소를 블록 요소처럼, 블록 요소를 인라인 요소처럼 사용할 수 있다.
- display 속성도 기본값이 존재-> block 요소는 기본값이 block, inline 요소는 기본값 inline이다.
- 모든 block 요소와 inline 요소를 외울 필요는 없지만 두 개의 요소가 있고 이것이 css에서 display라는 속성에 영향을 받고 있다고 알고 있기!

---------------------------------------------------


여러 가지 태그들
1. HTML 태그
- HTML 문서의 시작과 끝부분을 지칭해서 작성할 수 있는 HTML의 모든 내용을 작성 할 수 있는 범위를 나타내는 태그
- 브라우저나 검색 엔진이 읽어야 하는 부분을 나타내 준다.
- lang(language의 약어)이라는 전역 속성 사용 가능(문서가 갖을 기본적인 언어)
   -> 국가 표시와 언어표시는 다른 것!
- [!+Tab] : html의 기본구조를 자동으로 완성시켜 줌

2. head 태그와 body 태그
- head 태그: 문서의 정보를 입력
- body 태그: 문서의 구조를 입력

3. DOCTYPE 태그
- <!DOCTYPE html> 태그: 이 태그 이하의 내용은 html5 버전으로 해석을 해서 브라우저에 출력을 해달라는 것
- 항상 맨 처음에 명시를 해줘야 한다.

4. head 태그 안에 쓰는 태그들 
- title 태그: html 문서의 제목 -> 브라우저의 탭에 표시되는 정보
- meta 태그: html 문서의 기타 제목
-  link 태그: 스타일을 외부에서 가져와서 연결

* <!-- --> : 주석 처리


-----------------------------------------------
여러 가지 태그들
1. meta 태그
- 닫히는 태그가 존재하지 않음
- 빈 태그들은 보통 속성을 갖고 있어야 한다.
  - name, content, charset 등의 속성을 추가할 수 있다.
1.1 charset: 문자가 인코딩되는 방식을 설정, UTF-8(조합형)로 거의 고정화 되어 있음.                  
             EUC-KR 방식도 한글을 인코딩하는 방법 중 하나지만 완성형이기 때문에 한글이 깨질 수도 있다.
1.2 content: http-eqive나 name 속성의 값을 갖는다.
1.3 http-eqive: 서버나 사용자의 환경에 작동 방식을 변경해 주는 지시사항 명시
1.4 name: 여기세 사용될 수 있는 값은 author(작성자), description(페이지 요약) 등이 있다.
    - viewport: 반응형 웹 사이트를 제공할 때 사용하는 값. 가로 너비는 디바이스의 가로 넓이에 맞춘다.

*og:title: og라는 것은 브라우저에게 특정 정보를 주기 위해서 사용하는 문법(이후에 설명)


2. link 태그
- 외부에서 css 파일을 가져올 때 사용하는 링크
=> 현재 문서와 외부 리소스와의 관계를 명시
- rel 속성: 외부에서 가져올 문서와 현재 문서와의 관계를 나타낸다(필수속성!)
   - stylesheet: css 문서를 가져올 때
   - 많은 속성들이 있지만 모두 외우기 보다는 그때그때 찾아서 공부하기 
- href 속성: 실제로 가져올 문서의 경로(필수 속성!)

** link tag mdn (다른 태그들도 가능) 이라고 검색 시 태그에 대한 정보들을 볼 수 있다.


3. style 태그
- style 태그 안에 css 문서의 내용을 바로 추가할 수 있다.
- type 속성추가 가능: style 태그 안에 어떤 타입의 내용을 작성할 것인지를 나타냄(생락 가능 => html 5에서는 기본값이 되어 들어가 있다.)
- ex) <style type=“text/css”>
- body 태그 안에도 작성할 수 있지만 별로 효율적인 방식은 아님 -> head 태그에 작성하는 것

-----------------------------------------

여러 가지 태그들
1. MIME type
- link태그나 style 태그에서는 type 부분을 생략해도 되지만 type을 명시해야 되는 부분이 존재하는데 이러한 타입들을 MIME 타입이라고 한다.
ex) text/html: html 파일을 가져올 때
    image/jpeg 또는 image/png: 이미지 파일을 가져올 때 
* 모두 외울 필요는 없다.

2. Base 태그
-문서에 포함된 모든 상대 URL들의 기준 URL을 나타냅니다.
- link 태그에서 경로를 작성할 때 ./로 시작하는 것은 나(현재 파일)를 기준으로 파일을 찾는 것=> 상대적인 경로 => 이것을 base 태그로 간단하게 할 수 있다.
<실습>
현재 폴더에서 css라는 폴더를 새로 생성하고 그곳에 css 파일을 이동시킨다.

<link  rel ="stylesheet" href ="./css/main.css">
-> 원래 css 파일을 사용하려면 주소 값을 위처럼 입력해야 한다.
<base  href ="./css/">
-> 하지만 이 라인을 link 태그 위에 삽입하면 상대 경로의 기본 경로를 지정하는 것이 되기 때문에 간략하게 표현할 수 있다.
<link  rel ="stylesheet" href ="main.css">
->따라서 기본 경로가 저장되어 있기 때문에 기존의 경로를 조금 더 간단하게 표현 가능하다.

**주의할 점
-base 태그는 html 문서에 1개만 사용 가능하다.
- base 태그에 입력된 경로는 html에서 사용되는 모든 상대 경로에 영향을 끼치게 되기 때문에 기준이 되는 경로가 자주 사용되지 않는다면 효과적으로 사용 불가능 할 수도 있다.

3. Body 태그
- 화면에 출력되는 요소들을 정의하는 부분

<지금부터 배우는 태그들은 모두 body 태그 안에 사용되는 태그들이다>

3.1 header 태그
- 소개나 탐색을 돕는 그룹 ex) 회원가입, 메뉴, 로그인, 로고 등의 요소
- header 태그 안에 header와 footer 태그를 또 넣을 수 없다.
- header 태그에만 쓸 수 있는 속성은 없고 전역속성(어느 태그에든 사용가능한 속성)은 사용 가능하다.

3.2 footer 태그
- 가장 가까운 구획화 콘텐츠나 구획화 루트의 푸터를 나타낸다.
- ex) 작성자 구획, 저작권 데이터, 관련된 문서의 링크에 대한 정보를 포함한다.
- 위의 header 태그와 같은 특징을 갖는다.


** 브라우저, 검색엔진 등이 태그의 의미를 읽어서 사용자에게 보여주는 것이다.
   => 의미가 없는 div만을 이용해서 레이아웃을 구성하지 않는 이유


3.3 h1 ~ h6까지의 h 태그
- 6단계의 문서 제목을 구현한다.
* 제목 폰트의 크기를 줄이기 위해 낮은 단계 사용X -> css의 font-size 사용하기
* 제목 단계를 건너뛰는 것 피하기 ex) h1 사용 후 h3 사용=> h2를 건너뛴 것
* 첫 번째 단계의 제목은 한 페이지에 하나만 사용 -> h1에 해당하는 제목은 하나만 
  -> 혹시 여러 번 사용해야 한다면 h2(낮은 단계)를 여러 번 사용하기

