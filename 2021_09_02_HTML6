[오늘 공부한 내용]
1. 제로 베이스 인강: 목록과 표/임베디드 요소 파트를 듣고 내용 정리
2. 인강을 듣고 실습 따라해 보기
code sandbox 링크: https://codesandbox.io/s/2021-09-02-html6-6wvku?file=/index.html:2214-2328

[목록과 표]
1. 목록- ol, li
- 순서가 있는 목록: ol(정렬된 목록: Ordered List) 
   -> 순위를 나타내거나 단계적으로 실행해야 하는 경우 사용
  - 기본적으로는 숫자 목록(1번부터 시작~)
  - 속성
   - type: 기본값은 숫자, a(소문자 a부터 시작), A(대문자 A부터 시작), I,i(로마 숫자)
   - start: 시작할 수를 지정 ex) start=“4” -> 4부터 시작
   - reversed: 순서를 역

- li(List Item) : 아이템 표현(ol, ul 모두 아이템 나열 시 사용)
 - 속성: value -> 해당 아이템의 시작 순서를 정할 수 있다.(ol의 start와 비슷)
  ex) <li value=“3”>List</li>  -> 3부터 시작, 이 이후는 4,5가 된다.
      <li>List</li>
     <li>List</li>
--------------------
     <li>List</li>  -> 첫 번째는 1부터 시작, 이 이후는 3,4가 된다.
     <li value=“3”>List</li>
     <li>List</li>

2. 목록- ul
- 순서가 없는 목록: ul(비정렬 목록: Unodered List)
   -> 순서 x, 단순히 아이템을 나열할 때 사용 
- 기본적으로 아이템 앞에 숫자 대신 블랙 포인트(검은색 점)가 생긴다.
- ul은 중첩이 가능한데, 중첩하면 블랙포인트 -> 화이트 포인트 등으로 바뀐다.
- ol과 ul을 섞어서 중첩도 가능하다.

<실습>
<ol >
  <li>First Item </li>
  <li>
    Second Item
    <ul>
      <li>first subitem </li>
      <li>second subitem </li>
      <li>third subitem </li>
    </ul>
  </li>
</ol>

3. 정의 목록- dl, dt, dd
- dl: 요소 설명 목록
 - dt로 표기한 용어와 dd로 표기한 설명을 감싸서 설명 목록 생성
 - 용어사전 또는 메타 데이터(키-값)를 표시할 때 사용
- dt: 용어
- dd: dt에 존재하는 용어 설명
 - 여러 개의 용어와 하나의 의미 -> 여러 개의 dt, 하나의 dd 이렇게도 사용 가능
 - 하나의 용어, 여러 개의 의미도 가능
 - dl 태그 안에 여러 dt, dd쌍이 있는 경우 div로 묶어서 사용 할 수도 있다.
** 이때 주의할 점! 웹 표준에서는 dl의 하위 요소로 div를 사용 할 수 있지만 dt, dd의 형제 요소로는 사용 불가능

<실습>
<dl>
  <div>
    <dt>Title </dt>
    <dd>About Time </dd>
<!-- 이렇게 dt, dd의 형제 요소로는 사용 불가능!!! -->
<!-- <div></div> -->
  </div>
  <div> 
    <dt>Date </dt>
    <dd>2004 </dd> 
  </div>
  <div>
    <dt>Genre </dt>
    <dd>Romance </dd>
  </div>
</dl>


4. 표- table, tr, th, td
- table: 만들고자 하는 표의 가장 바깥 부분을 묶어준다.
- tr: table row- 표의 행
- th: table head- 행이나 열을 대표하는 명칭을 사용한다(굵은 글씨, 가운데 정렬)
 - 속성: scope=“col(또는 row)” 해당 th가 어떤 열(행)을 대표하는지를 명시해 주는 속성(보기에 변화 x)
- td: table data- 표에 존재하는 단순한 데이터(왼쪽 정렬, 얇은 글씨)
 - colspan 속성: 여러 개의 행을 합쳐서 사용하고 싶을 때(th도 사용 가능)
  ex) colspan=“2” -> 두 개의 행을 합칠 수 있다.
 
5. thread, tbody, tfoot
- 표에서도 header, footer, body으로 나눌 수 있다.
- thead: header 역할로, table 태그 바로 아래에 존재
** 주의 할 점
- 웹 표준에 의해 thead를 사용하기로 했다면, 형제 태그로 tr, td가 아닌 tbody, tfooter를 사용해야 한다.
- tbody: 여러개 사용할 수 있다.

6. caption
- 표 설명 요소: 표 전체를 아우르는 제목, 표의 설명을 나타낸다. -> table 요소의 자식으로 들어간다.
- figure + figcaption(설명)와 비슷
** 주의할 점- caption은 table의 첫 번째 자식 요소여야 한다.
- caption은 표의 위에 자리하는데, 아래에 자리 잡게 하고 싶은 경우는 CSS를 이용한다. 
- caption을 가진 table 요소가 figure의 유일한 자식은 경우, caption 대신 figcaption 사용

<실습>
<table >
  <caption >가계부 </caption >

  <thead >
    <tr >
     <th scope ="col">분류 </th >
     <th scope ="col">내용 </th >
     <th scope ="col">금액 </th >
    </tr >
  </thead >

  <tbody >
    <tr >
     <th scope ="row">교통비 </th >
     <td scope ="row">시외버스 </td >
     <td >5000 </td >
   </tr >

   <tr >
     <th >식비 </th >
     <td >빵집 </td >
     <td >10000 </td >
   </tr >

   <tr >
     <th >통신비 </th >
     <td >인터넷비용 </td >
     <td >20000 </td >
   </tr >
  </tbody >
  <tfoot >
    <tr >
     <td colspan ="2">합계 </td >
     <td >35000 </td >
    </tr >
  </tfoot >
</table >


[임베디드 요소]
1. img- src
- 이미지 삽입 요소: 외부에서 이미지 콘텐츠를 가져올 수 있다.
- 빈 요소: 콘텐츠가 없음-> 자식 요소를 갖을 수 없다.
- src 속성 필수: 이미지의 경로
  - 상대 경로(현재 위치 중심 -> 같은 코드여도 다른 이미지를 띄울 수 있다, 외부에서 접속 불가능)
  - 절대 경로(이미지의 주소 url -> 어떤 위치에서도 동일한 이미지 사용 가능)

2. img- alt, width, height
- alt 속성: 이미지에 대한 설명을 텍스트로 입력하는 것
  => 필수는 아니지만 접근성 차원에서 매우 유용
 -> 스크린 리더가 alt 값을 읽어 사용자에게 이미지를 설면, 이미지를 표시할 수 없는 경우 alt의 값을 대신 보여준다.
- width: 픽셀 기준으로 가로길이 정의
- height: 픽셀 기준으로 세로길이 정의
  -> 가로 길이만 조절을 하면, 세로 길이도 자동으로 조절한다.

3. 웹에서 사용하는 이미지 유형
- HTML 표준은 지원하는 이미지 형식을 명시하지 않음 -> 사용자 에이전트(웹 브라우저)가 서로 다른 형식을 지원
  1) jpeg(.jpg/.jpeg)- 정지 이미지, 압축을 잘 해서 용량을 잘 줄일 수 있음(현제 가장 많이 사용됨)
  2) png(.png)- 원본 이미지를 보다 정확하게 보여줌, 투명도를 지원하기 때문에 아이콘 등을 표현하기에 좋음(사진을 넣었을 때 웹의 배경이 있고, 사진이 흰색 배경이라면 이 흰색을 투명하게 가능!) 
  3) gif(.gif)- 여러장의 이미지로 이루어진 애니메이션 표현 가능, 대신 색감이 조금 떨어짐
  4) webp(.webp)- 구글에서 만든 이미지 포맷, 위의 것보다 품질, 압축률이 좋지만 지원 브라우저가 별로 없음.
  5) svg(.svg)- 깨지지 않기 때문에 다양한 크기로 그려야 하는 아이콘, 다이어그램 등에 사용

- 1번~4번은 래스터 이미지, 5번은 벡터 이미지 => 둘은 사용처가 다른 것이다.
 - 래스터 이미지는 확대할수록 계단형으로 화질이 깨짐(모눈종이를 색으로 채우는 느낌!), 풍경 사진, 일반적인 사진에 사용됨
 - 벡터 이미지는 깨지지 않음(점과 점사이를 직선으로 잇는 느낌!), 아이콘, ui 요소들(그래픽 적인 요소)에 많이 사용됨(대신 풍경사진에는 잘 사용되지 않음)

4. 반응형 이미지- srcset
- 여러개의 이미지 경로 사용 가능 -> 반응형 이미지를 만들기 위해!!!
- 인터넷 익스플로러 지원이 안되기 때문에 src에 기본 이미지를 넣어주고 사용하기
- 반응형 이미지: 사용자의 viewport에 맞춰서 이미지를 조절
- 사용법: 여러개의 이미지 파일을 “,(쉼표)”를 이용해 입력 -> 그 뒤에 너비 서술자, 밀도 서술자를 입력

<실습>
<img
src ="image/600.png"
srcset ="image/300.png 300w, image/450.png 450w, image/600.png 600w"
alt ="responsible images" />

5. 반응형 이미지- sizes
- srcset: 뷰포트에 따라 아예 다른 이미지를 보여줌
- sizes: 어떤 조건에 따라 아예 다른 이미지를 주고, 사이즈를 지정해준다.
- 미디어 조건(뷰포트 속성) + 소스 크기 값
- srcset을 이용했을 때는 크기가 엄청 커져도 이미지가 계속 커졌는데, sizes를 이용하면 특정 값 이상으로 이미지가 커지지 않도록 할 수 있다. 

<실습>
- sizes=“(미디어 조건)”
- 미디어 조건에서 잘 쓰이는 것: min-width(이 값보다 큰 경우를 의미)/max-width
ex) sizes=“(min-width: 600px) 600px” => 600px 보다 더 큰 너비를 가지고 있는 사람들에게 600px로 고정하라는 의미

sizes=“(min-width: 600px) 600px,
       (min-width: 450px) 450px,
       300px ”
=> 조건은 위에서부터 읽는다. 600px보다 크면 이미지 크기는 600px, 450px~600px이면 이미지 450px, 나머지는 300px

6. video
- 비디오 삽입 요소
- 속성
  1) src 속성: 비디오 경로 
    -> video의 src 속성은 선택사항
    =>그 이유는 video는 자식요소를 갖을 수 있기 때문에 src가 없다면, 자식으로 
	<source src=“”>이렇게 할 수 있기 때문이다.
  2) controls 속성: 기본적으로는 재생, 소리 등의 버튼을 제공하지 않기 때문에 이 속성으로 조절 할 수있다. (기본값 false)
  -> boolean 값(입력을 하거나 안하거나)이기 때문에 controls 만 추가하면 버튼이 생긴다.
  3) autoplay: 자동 재생, boolean 값(쓰거나 안쓰거나)
   - autoplay가 있어도 새로고침을 하면 자동 재생이 안된다
   -> 그 이유는 웹 페이지에 집입 하자마자 재생하면 사용자에게 좋지 않아서 웹에서 막고        있음 => 소리를 없애는 muted 속성과 같이 사용하면 autoplay 사용 가능
  4) muted: 소리 제거, boolean 값(muted 있으면 소리 제거)
  5) loop: 동영상을 끝까지 재생 후 다시 앞으로 돌아감
  6) poster(=썸네일): 동영상 재생이 안되는 경우나 영상 재생 전, poster 프레임을 썸네일로 띄운다. 포스터 프레임을 안해놓으면 영상의 첫 번째 프레임으로 자동 설정 된다.
   ex) <video poster=“image.png”><video> ->영상 재생이 안되면 image.png를 썸네일로 사용

- img와 다른점: <video></video> 이렇게 쓰이기 때문에 자식 요소를 갖을 수 있고, 이 자식 요소는 video 요소를 지원하지 않을 때 보여줌

<실습>
<video src ="video/sample-5s.mp4"controls >
 Sorry, your browser dosen't support embedded videos.
</video >

7. audio
- 대부분 video와 같은 속성
- src 속성을 쓰거나 자식 요소로 source 사용 가능
- 한 개 이상의 오디오 소스를 지정 가능(video와 동일)
  -> 여러개인 경우 위에부터 지원 가능한 경우인지 확인하며 진행
  -> 첫 번째 소스가 안되면, 그 다음 소스에 존재하는 진행
  -> 모두 다 재생이 안되면 video와 마찬가지로 마지막 자식에 재생이 안됨을 글로 넣어주면 된다.

**오디오 및 오디오를 가진 비디오를 자동으로 재생하는 사이트는 사용자에게 악영향을 끼칠 수 있으므로 피해야 한다. 비디오 태그의 경우 muted 속성과 같이 사용하면 문제없이 사용 가능하다.

8. canvas, iframe 
- canvas: 그래픽 캔버스 요소
- html로 마크업 할 수 있지만 가로, 세로 길이 정도 이고, 실제로 그림, 메모 등을 하려면 자바 스크립트가 필요

- iframe: 인라인 프레임 요소
- src를 외부에서 불러와서 사용 => 어떠한 창 안에 다른 html 페이지를 띄워주는 형태로 사용
- 아무 웹사이트나 불러올 수 있는 것은 아니다(보통 지도를 가져옴)
