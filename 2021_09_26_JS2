[오늘은 그동안 배웠던 어려웠던 HTML/CSS 복습 + 저번 시험 문제 복습]

CSS
<transform 변환 속성>

1. transform-origin
- 요소 변환의 기준점을 설정
- 값: x, y, z축(기본값: 정가운데) -> 단위를 넣어도 되고 left, right 등을 사용해도 된다.
- 기본적으로 x, y축은 4사분면이다.

2. transform-style
- 3D 변환 요소의 자식 요소도 3D 변환을 사용할지 설정
- 값: flat(자식 요소에 3D 변환을 사용하지 않음, 기본값), preserve-3d(자식 요소에 3D 변환을 사용)

<실습>
- 첫 번째 칸은 html
- 두번째 칸은 transform-style: flat; 으로 하위 요소인 parent에 적용된 3d 변환이 적용되지 않는다.

<div  class ="perspective">
        <div  class ="grand-parent">
            <div  class ="parent">
                <img  src ="./images/heropy.webp" alt ="HEROPY">
            </div >
        </div >
    </div >

.perspective {
    width : 200px ;
    perspective : 500px ;
    padding : 70px ;
}
.grand-parent {
    width : 200px ;
    border : 3px  solid  darkblue ;
    transition : 1s ;
    transform : rotateX (-45deg );
}
.parent {
    width : 200px ;
    border : 3px  solid  lightpink ;
    transition : 1s ;
    transform : rotateY (45deg );
}
img {
    width : 200px ;
}

.perspective {
    width : 200px ;
    perspective : 500px ;
    padding : 70px ;
}
.grand-parent {
    width : 200px ;
    border : 3px  solid  darkblue ;
    transition : 1s ;
    transform : rotateX (-45deg );
    transform-style : preserve-3d ;
}
.parent {
    width : 200px ;
    border : 3px  solid  lightpink ;
    transition : 1s ;
    transform : rotateY (45deg );
}
img {
    width : 200px ;
} 

.perspective {
    width : 200px ;
    perspective : 500px ;
    padding : 70px ;
}
.grand-parent {
    width : 200px ;
    border : 3px  solid  darkblue ;
    transition : 1s ;
    transform : rotateX (-45deg );
    transform-style : preserve-3d ;
}
.parent {
    width : 200px ;
    border : 3px  solid  lightpink ;
    transition : 1s ;
    transform : rotateY (45deg );
    transform-style : preserve-3d ;
}
img {
    width : 200px ;
    border : 3px  solid  green ;
    transition : 1s ;
    transform : rotateX (45deg );
}

* preserve-3d 속성은 바로 밑 자식에게만 적용되는 것이기 때문에 손자 요소에게도 적용하려면 해당 부모 요소에 계속 명시해줘야 한다.

3. perspective
- 하위 요소를 관찰하는 원근 거리를 설정
- 값: 단위
- 하위 요소를 관찰하는 것이기 때문에 관찰하고자 하는 요소보다 상위에 적용해야 한다.

- perspective 속성과 함수의 차이점

속성/ 함수
적용 대상
기준점 설정
perspective
관찰 대상의 부모 요소
perspective-origin
transform: perspective()
관찰 대상
transform-origin

-> 관찰 대상이 여러 개라면 perspective 속성, 한 개라면 함수를 사용
-> perspective 속성은 관찰 대상의 부모(조상)요소에 적용하여 하위요소를 관찰하는 원근거리 설정, perspective 함수는 관찰 대상에 직접 적용하여 그 대상을 관찰하는 원근거리 설정

4. perspective-origin
- 원근거리의 기준점을 설정
- 값: x값, y값 ->left, right, center, %, 단위 등 (기본값 50%))

5. backface-visivility
- 3D 변환으로 회전된 요소의 뒷면 숨김을 설정
- 값: visible(기본값), hidden

<실습>

<body >
    <img  src ="http://heropy.blog/css/images/logo.png" alt ="HEROPY">
</body >

img {
    width : 300px ;
    border : 1px  solid  green ;
    transition : 1s ;
    transform : perspective (400px ) rotateY (180deg );
}

-> 여기에 backface-visibility : hidden ; 를 추가하면 180도 돌렸을 때 뒷면이 보이지 않게 된다 => 카드를 뒤집은 것 같은 효과

6. matrix(a, b, c, d, e, f)
- 요소의 2차원 변환 효과를 지정
- scale, skew, translate, rotate를 지정
- 요소에 일반변환함수(scale, skew, translate, rotate 함수들)를 사용하더라도 브라우저에 의해 matrix로 계산되어 적용이 된다.


HTML

멀티 미디어
1. Img tag
- 이미지를 삽입
1.1 속성
- src 속성: (필수) 이미지 url
- alt 속성: (필수) 이미지의 대체 텍스트(이미지가 제대로 출력되지 못한 경우
- width, height 속성: 너비, 높이 설정(px 단위로 설정하 않아도 됨) but css로도 조절 가능
** 크기를 줄이는 용도로 사용할 경우 가로나 세로 중 하나만 사용하기
   -> 가로나 세로를 설정할 경우 이미지가 가지고 있는 비율에 맞춰서 줄어들기 때문

- srcset 속성: 브라우저에게 제시할 이미지 url과 원본 크기의 목록을 정의
- sizes 속성: 미디어의 조건과 해당 조건일 때 이미지 최적화 크기의 목록을 정의
-> srcset, sizes 속성은 보통 반응형 웹 사이트 제작 시 사용

<srcset>
- srcset이 사용될 수 없는 환경에서는 src가 대체되어 사용된다.
-> srcset이 사용되는 환경에서는 src 내용이 적용되지 않는다.
- srcset의 내용은 이미지 경로와 이미지 크기가 띄어쓰기를 통해 제공이 되며 쉼표(,)를 통해 여러 개 정의할 수 있다.-> 브라우저가 사용자의 환경에 맞는 이미지를 골라서 사용하게 된다. 
- 이미지가 2장 이상 일 때 사용
** 이미지 크기로 px이 아닌 w 또는 x 단위로 입력해야 하며, 작은 크기 이미지부터 입력
 w unit: 이미지 원본 크기의 가로 너비
** 브라우저는 이미지의 크기를 늘려서(작은 이미지를 큰 화면에 맞추기 위해 늘리는 것) 사용하기 보다는 가장 적합하지만 큰 이미지를 선택해 줄여서 사용하는 것을 선호한다

** img 태그에 width 속성을 넣으면 브라우저가 large, medium, small를 선택하고 그 이미지의 크기를 400으로 맞춰서 출력한다.

 x unit: 이미지의 비율 의도 -> 배수 정의 => 일반적으로 w 단위를 이용한다.

<sizes>
- (미디어 조건) 그 미디어 조건에 최적화된 이미지 크기 형식으로 속성이 들어간다.
* sizes는 최적화 된 조건, srcset은 그 조건에 맞는 출력될 이미지 목록
--------------------------

멀티 미디어 Img 태그의 속성
1. sizes 속성
- 미디어의 조건과 그 조건에 해당하는 이미지의 ‘최적화 출력 크기’를 지정
- (미디어의 조건) 최적화 출력 크기 형식으로 사용 
ex) sizes ="(min-width: 1000px) 700px"

=> 최소 너비가 1000px 일 때 최적화된 출력 크기로 700px을 사용하겠다라는 의미

** 일반 출력과 최적화 출력
<일반 출력>
- width를 이용한 일반 출력은 크기는 고정이지만 브라우저 크기의 최적화에 따라서 가져오는 이미지의 경로를 달리 하겠다는 것
-> large, medium, small 이미지를 브라우저의 크기에 따라 다르게 사용하지만 크기는 모두 동일한 이미지로!

<최적화 출력>
sizes ="300px"
- 뷰포트의 너비와 상관 없이 medium 이미지만 사용이 된다.
- 출력될 크기와 최적화 한 크기도 300px 이라는 의미
- > 위의 코드에서 보면 small 이미지는 400px, medium 이미지는 700px, large 이미지는 1000px인데 500px에 맞추기에 가장 적합한 이미지는 이미지의 크기를 줄이지 않고 늘려야 하며 가장 적게 늘릴 수 있는 medium 이미지이기 때문에 뷰포트에 상관 없이 medium이미지만 사용 된다.

**sizes와 width를 동시에 사용하면 width가 우선!!
