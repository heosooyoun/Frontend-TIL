[오늘 공부한 것]
- css 폰트 관련 속성 인강 + 실습 + 필기
code sandbox 링크:https://codesandbox.io/s/2021-09-07-css-m0ydd?file=/index.html

[폰트/텍스트 관련 속성]
1. font-size, font-style, font-weight
  1) color: 폰트 색상 변경 (font-color도 가능)
  2) font-size: 폰트 크기(대체로 기본값 16px), 보통 length value(숫자+단위), % 사용
  3) font-style: 대체로 이텔릭 체를 만들기 위해 사용(itelic 또는 oblique), 기본값은 normal -> <em> 태그(강조를 위함)와는 다르게 단순히 기울임을 위한 것
  4) font-weight: 글씨 굵기(기본값 400)
   - 굵게: bold or 700 
   - <strong>, <b> => 이것과는 다르게 단순히 굵게 보여주기 위한 것

<실습>
.test {
font-size : 20px ;
font-style : italic ;
font-weight : bold ;
}

2. font-family
- 글꼴 자체를 변경하기 위한 것: 기본값은 브라우저에 따라 다름
- 사용자 마다 갖고 있는 글꼴이 다를 수 있다 => 여러개의 글꼴을 나열해서 사용자의 컴퓨터에 있는 폰트를 사용하도록 할 수 있다.
- 보통 앞에 원하는 폰트를 나열을 한 뒤 마지막에는 genetic family name를 써주는 것이 좋다. -> 앞의 글꼴이 모두 없으면 브라우저에 설정되어 있는 genetic family name 글꼴을 사용하기 때문 
  ex) serif, san-serif, monospace 등
- 폰트 이름 중간에 스페이스가 있으면 ‘ 따옴표로 묶어준다.

<실습>
.test {
font-family : 'Segoe UI', Tahoma , Geneva, Verdana , sans-serif ;
}

3. line-height
- 줄의 높이를 설정=> 글씨 위 아래로 약간의 여백까지 포함한 높이
- 글씨 크기는 같고 글꼴이 달라지면 line-height 때문에 전체적인 크기가 다르다
  => line-height는 고정된 값이 아니라 디자인에 따라 다른 것
- line-height를 이용해 값을 고정시켜 놓으면 너비를 일치시킬 수 있다.

<실습>
p {
font-size : 24px ;
line-height : 2 ;
}
.test {
font-family : "Courier New", Courier , monospace ;
}

4. font와 단축 속성(shorthand)
- 여러 가지 속성을 한줄로 표현하는 것
- 필수 요소: font-size, font-family
- 선택 요소: font-style, font-variant, font-weight, line-height
- font-variant(거의 사용x)

<실습>
font-size : 20px ;
font-family : Arial , Helvetica , sans-serif ;
[기존 코드]

font : 20px Arial , Helvetica , sans-serif ;
[바꾼 코드]

- 사용 규칙
 1) font-style, font-weight는 font-size 앞에!
font : italic 800 20px Arial , Helvetica , sans-serif ;
 
 2) line-height는 size/숫자 이런 식으로 작성!
font : italic 800 20px/1.5 Arial , Helvetica , sans-serif ;

5. letter-spacing, word-spacing
 1) letter-spacing: 단어를 이루는 한글자 한글자의 간격
  - 기본값: normal(글꼴에 따라서 다름)
  - 5px: 기본값에 +5px 한다는 의미
  - 음수도 사용가능(글자가 겹쳐자ᅟᅵᆷ)하지만 가능한 사용하지 않는 것을 추천
 2) word-spacing: 한 단어 한 단어 사이의 간격(띄어쓰기 간격)
  - 음수도 사용 가능/ %값도 사용 가능(기본이 100%라면 50%는 기존의 반)
=> 이 두가지 속성은 가장 적절한 값을 설정해 놓은 것이기 때문에 될수 있다면 조절하지 않는 것이 접근성 측면에서 좋다.

<실습>
.test {
letter-spacing : 5px ;
word-spacing : 10px ;
}

6. text-align
- 텍스트를 정렬하는 방법을 명시
- 보통 왼쪽(left)/오른쪽(right)/중앙(center) 정렬을 많이 사용
<실습>
.test {
text-align : center ;
}

- 사용 조건
  - 사용할 요소가 block 요소여야 한다. 
   => 중앙 정렬을 예로 들면 블록요소의 중앙으로 옮기는 것이기 때문에 인라인 요소는 사용 불가능하다(인라인 요소는 이미 꽉 채워서 사용하는 것이기 때문에)
  - 인라인 요소에 사용하고 싶다면 인라인 요소를 블록요소로 감싼 후 적용하기

<실습>
.container {
text-align : center ;
}
.inline {
text-align : right ;
}

7. text-indent
- 들여쓰기 속성(상속 가능)
- 인라인 요소에는 적용 불가능
- % 값도 사용가능 ex) 50%: 전체 가로의 반

<실습>
- 가장 바깥에 div태그(class=“container”)로 3개의 문단을 감싸고 있다. 
.paragraph1 {
text-indent : 20px ;
}
.container {
text-indent : 50px ;
}
- container에 들여쓰기를 했기 때문에 paragraph1을 제외한 나머지에게 50px 만큼에 들여쓰기가 적용되고, paragraph1은 자신의 속성이 있기 때문에 20px만 적용이 된다.

8. text-decoration
- css 단축 속성
- font에서도 단축속성이 있었지만, font의 경우는 따로 쓰는 경우가 더 많음. 
  but text-decoration은 단축속성으로 사용하는 경우가 더 많다.
- 필수 요소: text-decoration-line
- 선택 요소: text-decoration-color, text-decoration-style, text-decoration-thickness

 1) text-decoration-line
  - 기본값: none
  - 사용 가능한 키워드: underline(밑줄), overline(위의 줄), line-through(취소선)
  - 여러개 설정도 가능

<실습>
span {
text-decoration : line-through underline ;
}

span {
color : red ;
text-decoration : underline black 3px wavy;
}
- 글자 색과 밑줄 색을 다르게 할 수 있음
- 밑줄, 밑줄 색은 검정, 밑줄은 3px로 두껍게, 밑줄은 물결로
- 순서는 상관 없지만 선을 여러개 하고 싶다면 붙여서 사용해야 한다.
ex) wave underline 이런식으로 붙여서!

  2) text-decoration-style
   - 기본값: solid(실선)
   - 사용 가능한 키워드: double(두줄), dotted(점선), dashed(조금 더 긴 점선), wavy(물결)

9. word-break
- 기본값(normal)이 같더라도 언어에 따라 조금씩 변화가 있다.
- 텍스트가 콘텐츠 박스 밖으로 나올 때 줄바꿈을 할지 결정
- 속성값: break-all(한중일 제외 -> 영어에서 많이 사용)/keep-all(한중일에서 사용)
** 영어는 기본값 normal에서 가장 바깥인 container 크기에 넘어가더라도 한 단어라면 줄바꿈을 하지 않는다.(뚫고 나가버림)
** 한중일은 기본값 normal에서 container에 맞추어서 한단어라도 줄바꿈이 일어난다.(break-all속성과 같음)
 1) break-all: 영어는 원래 줄바꿈이 안되고 뚫고 나가지만 줄바꿈이 일어나도록 하는 것(한글처럼)
 2) keep-all: 영어처럼 뚫고 나가도록 바꾸는 것 

10. text-transform
- 사용 언어가 한정적임(한국어 불가능)
- 사용 속성: capitalize(단어의 맨 앞 글자가 대문자로)/uppercase(모두 대문자로 변경)/lowercase(모두 소문자로 변경)/기본값 none
- 실제로 html 텍스트를 바꾸는 것이 아니라 보여지는 것만 다르게 보이도록 한 것
